     1                                 %line 1+1 test.asm
     2                                 [section .data]
     3                                 
     4                                 EXIT_SUCCESS equ 0
     5                                 SYS_exit equ 60
     6                                 
     7                                 printLineCount equ 10
     8                                 squareSize equ 10
     9                                 
    10 00000000 48656C6C6F20576F72-    hello db "Hello World!", 0xA
    11 00000000 6C64210A           
    12 0000000D 58                     squareChar db 'X'
    13 0000000E 0A                     newLine db 0xA
    14 0000000F 42                     leftChar db 'B'
    15 00000010 44                     middleChar db 'D'
    16 00000011 48                     rightChar db 'H'
    17                                 
    18                                 [section .text]
    19                                 [global _start]
    20                                 _start:
    21                                 
    22 00000000 BB01000000              mov ebx, 1
    23 00000005 BA01000000              mov edx, 1
    24 0000000A 41B00A                  mov r8b, squareSize
    25 0000000D EB00                    jmp printSquare
    26                                 printSquareReturn:
    27 0000000F EB69                    jmp last
    28                                 
    29                                 
    30                                 printSquare:
    31 00000011 41B100                  mov r9b, 0
    32                                 printSquareLoop:
    33 00000014 4538C1                  cmp r9b, r8b
    34 00000017 7DF4                    jge printSquareReturn
    35 00000019 41B20A                  mov r10b, squareSize
    36 0000001C EB2D                    jmp printLineBetter
    37                                 printLineReturn:
    38 0000001E B804000000              mov eax, 4
    39 00000023 B9[00000000]            mov ecx, newLine
    40 00000028 CD80                    int 0x80
    41 0000002A 4180C101                add r9b, 1
    42 0000002E 4538C1                  cmp r9b, r8b
    43 00000031 EBDF                    jmp printSquareLoop
    44                                 
    45                                 
    46                                 printLine:
    47 00000033 41B300                  mov r11b, 0
    48 00000036 B9[00000000]            mov ecx, squareChar
    49                                 printLineLoop:
    50 0000003B 4538D3                  cmp r11b, r10b
    51 0000003E 7DDC                    jge printLineReturn
    52 00000040 B804000000              mov eax, 4
    53 00000045 CD80                    int 0x80
    54 00000047 4180C301                add r11b, 1
    55 0000004B EBEC                    jmp printLineLoop
    56                                 
    57                                 printLineBetter:
    58 0000004D 41B300                  mov r11b, 0
    59                                 printLineBetterLoop:
    60 00000050 4538D3                  cmp r11b, r10b
    61 00000053 7DC7                    jge printLineReturn
    62 00000055 B804000000              mov eax, 4
    63 0000005A 4538CB                  cmp r11b, r9b
    64 0000005D 720D                    jb setLeftChar
    65 0000005F 7F12                    jg setRightChar
    66 00000061 B9[00000000]            mov ecx, middleChar
    67                                  setCharReturn:
    68 00000066 CD80                    int 0x80
    69 00000068 4180C301                add r11b, 1
    70 0000006C EBE0                    jmp printLineBetterLoop
    71                                 
    72                                 setLeftChar:
    73 0000006E B9[00000000]            mov ecx, leftChar
    74 00000073 EBEF                    jmp setCharReturn
    75                                 
    76                                 setRightChar:
    77 00000075 B9[00000000]            mov ecx, rightChar
    78 0000007A EBE8                    jmp setCharReturn
    79                                 
    80                                 last:
    81 0000007C 48C7C03C000000          mov rax, SYS_exit
    82 00000083 48C7C700000000          mov rdi, EXIT_SUCCESS
    83 0000008A 0F05                    syscall
